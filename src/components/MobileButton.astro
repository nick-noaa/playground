---
import { Icon } from 'astro-icon';
---

<button
  class="mobile-nav-toggle"
  id="menu-toggle"
  aria-controls="primary-navigation"
  aria-expanded="false"
>
  <span class="sr-only">Menu</span>

  <Icon name="mdi:menu" width="50" />
</button>

<style lang="scss">
  .mobile-nav-toggle {
    display: none;

    padding: 1em;

    @media (max-width: 700px) {
      display: block;
      position: absolute;
      aspect-ratio: 1;
      right: 2rem;

      border: none;
      border-radius: 0;
      background: transparent;
      color: #fff;
      cursor: pointer;
      display: inline-block;
      padding: 1em 1.5em;
      text-transform: uppercase;
      transition: all 0.25s ease-in-out;
      z-index: 9999;
    }

    &:focus {
      outline: none;
    }
    &.opened {
      .mobile-nav-toggle__svg {
        .line-1 {
          transform: rotate(45deg) translateY(0) translateX(0);
        }
        .line-2 {
          opacity: 0;
        }
        .line-3 {
          transform: rotate(-45deg) translateY(0em) translateX(0em);
        }
      }
    }

    &__icon {
      display: inline-block;
      fill: currentColor;
      vertical-align: middle;
      position: relative;
      top: -0.0625em;
      width: 2em;
      height: 2em;
      top: 0;
    }
  }

  .mobile-nav-toggle__svg {
    .line {
      opacity: 1;
      transform: rotate(0) translateY(0) translateX(0);
      transform-origin: 1em 1em;
      transition: transform 0.3s ease-in-out, opacity 0.2s ease-in-out;
    }
    .line-1 {
      transform-origin: 1em 2.5em;
    }
    .line-3 {
      transform-origin: 1em 4.5em;
    }
  }
</style>


<script>
  const primaryNav = document.querySelector('ul') as HTMLElement;
  const navToggle = document.getElementById('menu-toggle') as HTMLElement;

  navToggle.addEventListener('click', () => {
    const visibility = primaryNav.getAttribute('data-visible');

    if (visibility === 'false') {
      primaryNav.setAttribute('data-visible', true);
      navToggle.setAttribute('aria-expanded', true);
    } else {
      primaryNav.setAttribute('data-visible', false);
      navToggle.setAttribute('aria-expanded', false);
    }

    // Toggle class "opened". Set also aria-expanded to true or false.
    if (-1 !== navToggle.className.indexOf('opened')) {
      navToggle.className = navToggle.className.replace(' opened', '');
      navToggle.setAttribute('aria-expanded', 'false');
    } else {
      navToggle.className += ' opened';
      navToggle.setAttribute('aria-expanded', 'true');
    }
  });
</script>