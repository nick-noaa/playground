---
// Imports
import { Icon } from 'astro-icon';

import changeDateFormat from '../js/dateFunctions.js';

// Fetching alerts
const response = await fetch('https://www.ncei.noaa.gov/alerts/api');
const { ...alerts } = await response.json();

// Alert info
// const alertTitle = alerts[0].title[0].value;
// const alertReferenceId = alerts[0].field_node_reference[0].target_id;
// const alertReferenceUrl = alerts[0].field_node_reference[0].url;
const alertReferenceUrl = '/';
const alertType = alerts[0].field_alert_type[0].value;
const alertBody = alerts[0].body[0].processed.replace(/(<([^>]+)>)/gi, '');

// Dates
let alertCreatedDate = alerts[0].created[0].value;
let alertEndDate = alerts[0].field_end_date[0].value;
let todayDate = new Date();

alertCreatedDate = changeDateFormat(alertCreatedDate);
alertEndDate = changeDateFormat(alertEndDate);
todayDate = changeDateFormat(todayDate);

const currentPath = Astro.url.pathname;

// Dynamicly Changing styles
let iconName, className;

if (alertType == 'severity-high')
  (iconName = 'mdi:lightning-bolt'), (className = 'error');

if (alertType == 'severity-medium')
  (iconName = 'mdi:alert'), (className = 'warning');

if (alertType == 'severity-low')
  (iconName = 'mdi:lightbulb'), (className = 'info');

if (alertType == 'success') (iconName = 'mdi:check'), (className = 'success');
---

{
  todayDate == alertEndDate || currentPath != alertReferenceUrl ? (
    ''
  ) : (
    <div class:list={`alert ${className}`}>
      <Icon name={iconName} width="30" color="var(--clr-base)" />
      <p>
        <span>{alertCreatedDate}:</span>
        {alertBody}
      </p>
    </div>
  )
}

<style>
  .error {
    --alert-bg-hs: var(--clr-error-hs);
    --alert-bg-l: var(--clr-error-l);
    --alert-bg: hsl(var(--alert-bg-hs) var(--alert-bg-l));
  }
  .info {
    --alert-bg-hs: var(--clr-info-hs);
    --alert-bg-l: var(--clr-info-l);
    --alert-bg: hsl(var(--alert-bg-hs) var(--alert-bg-l));
  }
  .warning {
    --alert-bg-hs: var(--clr-warning-hs);
    --alert-bg-l: var(--clr-warning-l);
    --alert-bg: hsl(var(--alert-bg-hs) var(--alert-bg-l));
  }
  .success {
    --alert-bg-hs: var(--clr-success-hs);
    --alert-bg-l: var(--clr-success-l);
    --alert-bg: hsl(var(--alert-bg-hs) var(--alert-bg-l));
  }

  .alert {
    background-color: hsl(var(--alert-bg-hs) calc(var(--alert-bg-l) + 30%));
    padding: 1em;
    width: 100%;
    font-size: var(--fs-2);
    display: flex;
    align-items: center;
    gap: 0.5em;
    border-left: 15px solid var(--alert-bg);
    margin-bottom: 5rem;
  }

  span {
    font-weight: var(--fw-7);
  }
</style>
